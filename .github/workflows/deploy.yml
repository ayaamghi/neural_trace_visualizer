# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes to the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          # Using Node.js 18, a stable LTS version, for better compatibility with older dependencies.
          node-version: 18 
          cache: 'npm'
          cache-dependency-path: fluroglancer/package-lock.json # Point cache to the correct lock file
      - name: Install dependencies
        # Using 'npm ci' for a clean, reproducible install from the lock file.
        run: npm ci --prefix fluroglancer
      - name: Build
        # IMPORTANT: We also tell npm where the project is to build it.
        run: npm run build --prefix fluroglancer
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # This path is crucial. It points to the build output folder.
          # Since we ran the build inside 'fluroglancer', the 'dist' folder will be inside it.
          path: 'fluroglancer/dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
